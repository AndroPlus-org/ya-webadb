{"version":3,"file":"static/chunks/pages/shell-8c0465bbd2ae9758.js","mappings":"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","sources":["webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.66.2_12a6012245369fd5be825566be975ff0/node_modules/@fluentui/react/lib/components/MessageBar/MessageBar.base.js","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.66.2_12a6012245369fd5be825566be975ff0/node_modules/@fluentui/react/lib/components/MessageBar/MessageBar.styles.js","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.66.2_12a6012245369fd5be825566be975ff0/node_modules/@fluentui/react/lib/components/MessageBar/MessageBar.js","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.66.2_12a6012245369fd5be825566be975ff0/node_modules/@fluentui/react/lib/components/MessageBar/MessageBar.types.js","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.66.2_12a6012245369fd5be825566be975ff0/node_modules/@fluentui/react/lib/components/SearchBox/SearchBox.base.js","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.66.2_12a6012245369fd5be825566be975ff0/node_modules/@fluentui/react/lib/components/SearchBox/SearchBox.styles.js","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.66.2_12a6012245369fd5be825566be975ff0/node_modules/@fluentui/react/lib/components/SearchBox/SearchBox.js","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+utilities@8.8.2_b094b78811fc8d2f00a90f13d0251fb6/node_modules/@fluentui/utilities/lib/DelayedRender.js","webpack://_N_E/?88ee","webpack://_N_E/./src/pages/shell.tsx"],"sourcesContent":["var _a;\nimport { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { DelayedRender, classNamesFunction, getNativeProps, htmlElementProperties, css } from '../../Utilities';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nimport { MessageBarType } from './MessageBar.types';\nimport { useId, useBoolean } from '@fluentui/react-hooks';\nvar ICON_MAP = (_a = {},\n    _a[MessageBarType.info] = 'Info',\n    _a[MessageBarType.warning] = 'Info',\n    _a[MessageBarType.error] = 'ErrorBadge',\n    _a[MessageBarType.blocked] = 'Blocked2',\n    _a[MessageBarType.severeWarning] = 'Warning',\n    _a[MessageBarType.success] = 'Completed',\n    _a);\nvar COMPONENT_NAME = 'MessageBar';\nvar getClassNames = classNamesFunction();\nvar getAnnouncementPriority = function (messageBarType) {\n    switch (messageBarType) {\n        case MessageBarType.blocked:\n        case MessageBarType.error:\n        case MessageBarType.severeWarning:\n            return 'assertive';\n    }\n    return 'polite';\n};\nvar getRole = function (messageBarType) {\n    switch (messageBarType) {\n        case MessageBarType.blocked:\n        case MessageBarType.error:\n        case MessageBarType.severeWarning:\n            return 'alert';\n    }\n    return 'status';\n};\nexport var MessageBarBase = React.forwardRef(function (props, ref) {\n    var _a = useBoolean(false), expandSingleLine = _a[0], toggleExpandSingleLine = _a[1].toggle;\n    var labelId = useId('MessageBar');\n    var actions = props.actions, className = props.className, children = props.children, \n    // eslint-disable-next-line deprecation/deprecation\n    overflowButtonAriaLabel = props.overflowButtonAriaLabel, dismissIconProps = props.dismissIconProps, styles = props.styles, theme = props.theme, _b = props.messageBarType, messageBarType = _b === void 0 ? MessageBarType.info : _b, _c = props.onDismiss, onDismiss = _c === void 0 ? undefined : _c, _d = props.isMultiline, isMultiline = _d === void 0 ? true : _d, truncated = props.truncated, dismissButtonAriaLabel = props.dismissButtonAriaLabel, messageBarIconProps = props.messageBarIconProps, role = props.role, _e = props.delayedRender, delayedRender = _e === void 0 ? true : _e, expandButtonProps = props.expandButtonProps;\n    var nativeProps = getNativeProps(props, htmlElementProperties, [\n        'className',\n        'role',\n    ]);\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        messageBarType: messageBarType || MessageBarType.info,\n        onDismiss: onDismiss !== undefined,\n        actions: actions !== undefined,\n        truncated: truncated,\n        isMultiline: isMultiline,\n        expandSingleLine: expandSingleLine,\n        className: className,\n    });\n    var expandIconProps = { iconName: expandSingleLine ? 'DoubleChevronUp' : 'DoubleChevronDown' };\n    var regionProps = actions || onDismiss ? { 'aria-describedby': labelId, role: 'region' } : {};\n    var actionsDiv = actions ? React.createElement(\"div\", { className: classNames.actions }, actions) : null;\n    var dismissButton = onDismiss ? (React.createElement(IconButton, { disabled: false, className: classNames.dismissal, onClick: onDismiss, iconProps: dismissIconProps ? dismissIconProps : { iconName: 'Clear' }, title: dismissButtonAriaLabel, ariaLabel: dismissButtonAriaLabel })) : null;\n    return (React.createElement(\"div\", __assign({ ref: ref, className: classNames.root }, regionProps),\n        React.createElement(\"div\", { className: classNames.content },\n            React.createElement(\"div\", { className: classNames.iconContainer, \"aria-hidden\": true }, messageBarIconProps ? (React.createElement(Icon, __assign({}, messageBarIconProps, { className: css(classNames.icon, messageBarIconProps.className) }))) : (React.createElement(Icon, { iconName: ICON_MAP[messageBarType], className: classNames.icon }))),\n            React.createElement(\"div\", { className: classNames.text, id: labelId, role: role || getRole(messageBarType), \"aria-live\": getAnnouncementPriority(messageBarType) },\n                React.createElement(\"span\", __assign({ className: classNames.innerText }, nativeProps), delayedRender ? (React.createElement(DelayedRender, null,\n                    React.createElement(\"span\", null, children))) : (\n                // this span is probably not necessary, but preserving it for now in case anyone\n                // has styling that expects it to be present\n                React.createElement(\"span\", null, children)))),\n            /* singleline expand/collapse button */ !isMultiline && !actionsDiv && truncated && (React.createElement(\"div\", { className: classNames.expandSingleLine },\n                React.createElement(IconButton, __assign({ disabled: false, className: classNames.expand, onClick: toggleExpandSingleLine, iconProps: expandIconProps, ariaLabel: overflowButtonAriaLabel, \"aria-expanded\": expandSingleLine }, expandButtonProps)))),\n            !isMultiline && actionsDiv,\n            /* singleline dismiss */ !isMultiline && dismissButton && (React.createElement(\"div\", { className: classNames.dismissSingleLine }, dismissButton)),\n            isMultiline && dismissButton),\n        isMultiline && actionsDiv));\n});\nMessageBarBase.displayName = COMPONENT_NAME;\n//# sourceMappingURL=MessageBar.base.js.map","var _a, _b, _c;\nimport { __assign } from \"tslib\";\nimport { HighContrastSelector, ScreenWidthMaxSmall, getScreenSelector, getGlobalClassNames, getFocusStyle, IconFontSizes, getHighContrastNoAdjustStyle, } from '../../Styling';\nimport { MessageBarType } from './MessageBar.types';\nvar GlobalClassNames = {\n    root: 'ms-MessageBar',\n    error: 'ms-MessageBar--error',\n    blocked: 'ms-MessageBar--blocked',\n    severeWarning: 'ms-MessageBar--severeWarning',\n    success: 'ms-MessageBar--success',\n    warning: 'ms-MessageBar--warning',\n    multiline: 'ms-MessageBar-multiline',\n    singleline: 'ms-MessageBar-singleline',\n    dismissalSingleLine: 'ms-MessageBar-dismissalSingleLine',\n    expandingSingleLine: 'ms-MessageBar-expandingSingleLine',\n    content: 'ms-MessageBar-content',\n    iconContainer: 'ms-MessageBar-icon',\n    text: 'ms-MessageBar-text',\n    innerText: 'ms-MessageBar-innerText',\n    dismissSingleLine: 'ms-MessageBar-dismissSingleLine',\n    expandSingleLine: 'ms-MessageBar-expandSingleLine',\n    dismissal: 'ms-MessageBar-dismissal',\n    expand: 'ms-MessageBar-expand',\n    actions: 'ms-MessageBar-actions',\n    actionsSingleline: 'ms-MessageBar-actionsSingleLine',\n};\nvar backgroundColor = (_a = {},\n    _a[MessageBarType.error] = 'errorBackground',\n    _a[MessageBarType.blocked] = 'errorBackground',\n    _a[MessageBarType.success] = 'successBackground',\n    _a[MessageBarType.warning] = 'warningBackground',\n    _a[MessageBarType.severeWarning] = 'severeWarningBackground',\n    _a[MessageBarType.info] = 'infoBackground',\n    _a);\nvar highContrastBackgroundColor = (_b = {},\n    _b[MessageBarType.error] = 'rgba(255, 0, 0, 0.3)',\n    _b[MessageBarType.blocked] = 'rgba(255, 0, 0, 0.3)',\n    _b[MessageBarType.success] = 'rgba(48, 241, 73, 0.3)',\n    _b[MessageBarType.warning] = 'rgba(255, 254, 57, 0.3)',\n    _b[MessageBarType.severeWarning] = 'rgba(255, 0, 0, 0.3)',\n    _b[MessageBarType.info] = 'Window',\n    _b);\nvar iconColor = (_c = {},\n    _c[MessageBarType.error] = 'errorIcon',\n    _c[MessageBarType.blocked] = 'errorIcon',\n    _c[MessageBarType.success] = 'successIcon',\n    _c[MessageBarType.warning] = 'warningIcon',\n    _c[MessageBarType.severeWarning] = 'severeWarningIcon',\n    _c[MessageBarType.info] = 'infoIcon',\n    _c);\nexport var getStyles = function (props) {\n    var _a, _b, _c, _d, _e;\n    var theme = props.theme, className = props.className, onDismiss = props.onDismiss, truncated = props.truncated, isMultiline = props.isMultiline, expandSingleLine = props.expandSingleLine, _f = props.messageBarType, messageBarType = _f === void 0 ? MessageBarType.info : _f;\n    var semanticColors = theme.semanticColors, fonts = theme.fonts;\n    var SmallScreenSelector = getScreenSelector(0, ScreenWidthMaxSmall);\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    var dismissalAndExpandIconStyle = {\n        fontSize: IconFontSizes.xSmall,\n        height: 10,\n        lineHeight: '10px',\n        color: semanticColors.messageText,\n        selectors: (_a = {},\n            _a[HighContrastSelector] = __assign(__assign({}, getHighContrastNoAdjustStyle()), { color: 'WindowText' }),\n            _a),\n    };\n    var dismissalAndExpandStyle = [\n        getFocusStyle(theme, {\n            inset: 1,\n            highContrastStyle: {\n                outlineOffset: '-6px',\n                outline: '1px solid Highlight',\n            },\n            borderColor: 'transparent',\n        }),\n        {\n            flexShrink: 0,\n            width: 32,\n            height: 32,\n            padding: '8px 12px',\n            selectors: {\n                '& .ms-Button-icon': dismissalAndExpandIconStyle,\n                ':hover': {\n                    backgroundColor: 'transparent',\n                },\n                ':active': {\n                    backgroundColor: 'transparent',\n                },\n            },\n        },\n    ];\n    return {\n        root: [\n            classNames.root,\n            fonts.medium,\n            messageBarType === MessageBarType.error && classNames.error,\n            messageBarType === MessageBarType.blocked && classNames.blocked,\n            messageBarType === MessageBarType.severeWarning && classNames.severeWarning,\n            messageBarType === MessageBarType.success && classNames.success,\n            messageBarType === MessageBarType.warning && classNames.warning,\n            isMultiline ? classNames.multiline : classNames.singleline,\n            !isMultiline && onDismiss && classNames.dismissalSingleLine,\n            !isMultiline && truncated && classNames.expandingSingleLine,\n            {\n                background: semanticColors[backgroundColor[messageBarType]],\n                color: semanticColors.messageText,\n                minHeight: 32,\n                width: '100%',\n                display: 'flex',\n                wordBreak: 'break-word',\n                selectors: (_b = {\n                        '.ms-Link': {\n                            color: semanticColors.messageLink,\n                            selectors: {\n                                ':hover': {\n                                    color: semanticColors.messageLinkHovered,\n                                },\n                            },\n                        }\n                    },\n                    _b[HighContrastSelector] = __assign(__assign({}, getHighContrastNoAdjustStyle()), { background: highContrastBackgroundColor[messageBarType], border: '1px solid WindowText', color: 'WindowText' }),\n                    _b),\n            },\n            isMultiline && {\n                flexDirection: 'column',\n            },\n            className,\n        ],\n        content: [\n            classNames.content,\n            {\n                display: 'flex',\n                width: '100%',\n                lineHeight: 'normal',\n            },\n        ],\n        iconContainer: [\n            classNames.iconContainer,\n            {\n                fontSize: IconFontSizes.medium,\n                minWidth: 16,\n                minHeight: 16,\n                display: 'flex',\n                flexShrink: 0,\n                margin: '8px 0 8px 12px',\n            },\n        ],\n        icon: {\n            color: semanticColors[iconColor[messageBarType]],\n            selectors: (_c = {},\n                _c[HighContrastSelector] = __assign(__assign({}, getHighContrastNoAdjustStyle()), { color: 'WindowText' }),\n                _c),\n        },\n        text: [\n            classNames.text,\n            __assign(__assign({ minWidth: 0, display: 'flex', flexGrow: 1, margin: 8 }, fonts.small), { selectors: (_d = {},\n                    _d[HighContrastSelector] = __assign({}, getHighContrastNoAdjustStyle()),\n                    _d) }),\n            !onDismiss && {\n                marginRight: 12,\n            },\n        ],\n        innerText: [\n            classNames.innerText,\n            {\n                lineHeight: 16,\n                selectors: {\n                    '& span a:last-child': {\n                        paddingLeft: 4,\n                    },\n                },\n            },\n            truncated && {\n                overflow: 'visible',\n                whiteSpace: 'pre-wrap',\n            },\n            !isMultiline && {\n                // In high contrast this causes the top and bottom of links' focus outline to be clipped\n                // (not sure of a good way around that while still maintaining text clipping)\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                whiteSpace: 'nowrap',\n            },\n            !isMultiline &&\n                !truncated && {\n                selectors: (_e = {},\n                    _e[SmallScreenSelector] = {\n                        overflow: 'visible',\n                        whiteSpace: 'pre-wrap',\n                    },\n                    _e),\n            },\n            expandSingleLine && {\n                overflow: 'visible',\n                whiteSpace: 'pre-wrap',\n            },\n        ],\n        dismissSingleLine: classNames.dismissSingleLine,\n        expandSingleLine: classNames.expandSingleLine,\n        dismissal: [classNames.dismissal, dismissalAndExpandStyle],\n        expand: [classNames.expand, dismissalAndExpandStyle],\n        actions: [\n            isMultiline ? classNames.actions : classNames.actionsSingleline,\n            {\n                display: 'flex',\n                flexGrow: 0,\n                flexShrink: 0,\n                flexBasis: 'auto',\n                flexDirection: 'row-reverse',\n                alignItems: 'center',\n                margin: '0 12px 0 8px',\n                selectors: {\n                    '& button:nth-child(n+2)': {\n                        marginLeft: 8,\n                    },\n                },\n            },\n            isMultiline && {\n                marginBottom: 8,\n            },\n            onDismiss &&\n                !isMultiline && {\n                marginRight: 0,\n            },\n        ],\n    };\n};\n//# sourceMappingURL=MessageBar.styles.js.map","import { styled } from '../../Utilities';\nimport { MessageBarBase } from './MessageBar.base';\nimport { getStyles } from './MessageBar.styles';\nexport var MessageBar = styled(MessageBarBase, getStyles, undefined, {\n    scope: 'MessageBar',\n});\n//# sourceMappingURL=MessageBar.js.map","/**\n * {@docCategory MessageBar}\n */\nexport var MessageBarType;\n(function (MessageBarType) {\n    /** Info styled MessageBar */\n    MessageBarType[MessageBarType[\"info\"] = 0] = \"info\";\n    /** Error styled MessageBar */\n    MessageBarType[MessageBarType[\"error\"] = 1] = \"error\";\n    /** Blocked styled MessageBar */\n    MessageBarType[MessageBarType[\"blocked\"] = 2] = \"blocked\";\n    /** SevereWarning styled MessageBar */\n    MessageBarType[MessageBarType[\"severeWarning\"] = 3] = \"severeWarning\";\n    /** Success styled MessageBar */\n    MessageBarType[MessageBarType[\"success\"] = 4] = \"success\";\n    /** Warning styled MessageBar */\n    MessageBarType[MessageBarType[\"warning\"] = 5] = \"warning\";\n})(MessageBarType || (MessageBarType = {}));\n//# sourceMappingURL=MessageBar.types.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, classNamesFunction, getNativeProps, inputProperties } from '../../Utilities';\nimport { useControllableValue, useId, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nvar COMPONENT_NAME = 'SearchBox';\nvar iconButtonStyles = { root: { height: 'auto' }, icon: { fontSize: '12px' } };\nvar iconButtonProps = { iconName: 'Clear' };\nvar defaultClearButtonProps = { ariaLabel: 'Clear text' };\nvar getClassNames = classNamesFunction();\nvar useComponentRef = function (componentRef, inputElementRef, hasFocus) {\n    React.useImperativeHandle(componentRef, function () { return ({\n        focus: function () { var _a; return (_a = inputElementRef.current) === null || _a === void 0 ? void 0 : _a.focus(); },\n        hasFocus: function () { return hasFocus; },\n    }); }, [inputElementRef, hasFocus]);\n};\nexport var SearchBoxBase = React.forwardRef(function (props, forwardedRef) {\n    var ariaLabel = props.ariaLabel, className = props.className, _a = props.defaultValue, defaultValue = _a === void 0 ? '' : _a, disabled = props.disabled, underlined = props.underlined, styles = props.styles, \n    // eslint-disable-next-line deprecation/deprecation\n    labelText = props.labelText, \n    // eslint-disable-next-line deprecation/deprecation\n    _b = props.placeholder, \n    // eslint-disable-next-line deprecation/deprecation\n    placeholder = _b === void 0 ? labelText : _b, theme = props.theme, _c = props.clearButtonProps, clearButtonProps = _c === void 0 ? defaultClearButtonProps : _c, _d = props.disableAnimation, disableAnimation = _d === void 0 ? false : _d, _e = props.showIcon, showIcon = _e === void 0 ? false : _e, customOnClear = props.onClear, customOnBlur = props.onBlur, customOnEscape = props.onEscape, customOnSearch = props.onSearch, customOnKeyDown = props.onKeyDown, iconProps = props.iconProps, role = props.role, onChange = props.onChange, \n    // eslint-disable-next-line deprecation/deprecation\n    onChanged = props.onChanged;\n    var _f = React.useState(false), hasFocus = _f[0], setHasFocus = _f[1];\n    var prevChangeTimestamp = React.useRef();\n    var _g = useControllableValue(props.value, defaultValue, function (ev, newValue) {\n        if (ev && ev.timeStamp === prevChangeTimestamp.current) {\n            // For historical reasons, SearchBox handles both onInput and onChange (we can't modify this\n            // outside a major version due to potential to break partners' tests and possibly apps).\n            // Only call props.onChange for one of the events.\n            return;\n        }\n        prevChangeTimestamp.current = ev === null || ev === void 0 ? void 0 : ev.timeStamp;\n        onChange === null || onChange === void 0 ? void 0 : onChange(ev, newValue);\n        onChanged === null || onChanged === void 0 ? void 0 : onChanged(newValue);\n    }), uncastValue = _g[0], setValue = _g[1];\n    var value = String(uncastValue);\n    var rootElementRef = React.useRef(null);\n    var inputElementRef = React.useRef(null);\n    var mergedRootRef = useMergedRefs(rootElementRef, forwardedRef);\n    var id = useId(COMPONENT_NAME, props.id);\n    var customOnClearClick = clearButtonProps.onClick;\n    var classNames = getClassNames(styles, {\n        theme: theme,\n        className: className,\n        underlined: underlined,\n        hasFocus: hasFocus,\n        disabled: disabled,\n        hasInput: value.length > 0,\n        disableAnimation: disableAnimation,\n        showIcon: showIcon,\n    });\n    var nativeProps = getNativeProps(props, inputProperties, [\n        'className',\n        'placeholder',\n        'onFocus',\n        'onBlur',\n        'value',\n        'role',\n    ]);\n    var onClear = React.useCallback(function (ev) {\n        var _a;\n        customOnClear === null || customOnClear === void 0 ? void 0 : customOnClear(ev);\n        if (!ev.defaultPrevented) {\n            setValue('');\n            (_a = inputElementRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n            ev.stopPropagation();\n            ev.preventDefault();\n        }\n    }, [customOnClear, setValue]);\n    var onClearClick = React.useCallback(function (ev) {\n        customOnClearClick === null || customOnClearClick === void 0 ? void 0 : customOnClearClick(ev);\n        if (!ev.defaultPrevented) {\n            onClear(ev);\n        }\n    }, [customOnClearClick, onClear]);\n    var onFocusCapture = function (ev) {\n        var _a;\n        setHasFocus(true);\n        (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, ev);\n    };\n    var onClickFocus = function () {\n        if (inputElementRef.current) {\n            inputElementRef.current.focus();\n            inputElementRef.current.selectionStart = inputElementRef.current.selectionEnd = 0;\n        }\n    };\n    var onBlur = React.useCallback(function (ev) {\n        setHasFocus(false);\n        customOnBlur === null || customOnBlur === void 0 ? void 0 : customOnBlur(ev);\n    }, [customOnBlur]);\n    var onInputChange = function (ev) {\n        setValue(ev.target.value, ev);\n    };\n    var onKeyDown = function (ev) {\n        // eslint-disable-next-line deprecation/deprecation\n        switch (ev.which) {\n            case KeyCodes.escape:\n                customOnEscape === null || customOnEscape === void 0 ? void 0 : customOnEscape(ev);\n                // Only call onClear if the search box has a value to clear. Otherwise, allow the Esc key\n                // to propagate from the empty search box to a parent element such as a dialog, etc.\n                if (value && !ev.defaultPrevented) {\n                    onClear(ev);\n                }\n                break;\n            case KeyCodes.enter:\n                if (customOnSearch) {\n                    customOnSearch(value);\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                }\n                break;\n            default:\n                // REVIEW: Why aren't we calling customOnKeyDown for Escape or Enter?\n                customOnKeyDown === null || customOnKeyDown === void 0 ? void 0 : customOnKeyDown(ev);\n                // REVIEW: Why are we calling stopPropagation if customOnKeyDown called preventDefault?\n                // customOnKeyDown should call stopPropagation if it needs it.\n                if (ev.defaultPrevented) {\n                    ev.stopPropagation();\n                }\n                break;\n        }\n    };\n    useDebugWarning(props);\n    useComponentRef(props.componentRef, inputElementRef, hasFocus);\n    return (React.createElement(\"div\", { role: role, ref: mergedRootRef, className: classNames.root, onFocusCapture: onFocusCapture },\n        React.createElement(\"div\", { className: classNames.iconContainer, onClick: onClickFocus, \"aria-hidden\": true },\n            React.createElement(Icon, __assign({ iconName: \"Search\" }, iconProps, { className: classNames.icon }))),\n        React.createElement(\"input\", __assign({}, nativeProps, { id: id, className: classNames.field, placeholder: placeholder, onChange: onInputChange, onInput: onInputChange, onBlur: onBlur, onKeyDown: onKeyDown, value: value, disabled: disabled, role: \"searchbox\", \"aria-label\": ariaLabel, ref: inputElementRef })),\n        value.length > 0 && (React.createElement(\"div\", { className: classNames.clearButton },\n            React.createElement(IconButton, __assign({ onBlur: onBlur, styles: iconButtonStyles, iconProps: iconButtonProps }, clearButtonProps, { onClick: onClearClick }))))));\n});\nSearchBoxBase.displayName = COMPONENT_NAME;\nfunction useDebugWarning(props) {\n    if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n        useWarnings({\n            name: COMPONENT_NAME,\n            props: props,\n            deprecations: { labelText: 'placeholder' },\n        });\n    }\n}\n//# sourceMappingURL=SearchBox.base.js.map","import { HighContrastSelector, AnimationVariables, normalize, getPlaceholderStyles, getGlobalClassNames, getInputFocusStyle, } from '../../Styling';\nimport { getRTL } from '../../Utilities';\nvar GlobalClassNames = {\n    root: 'ms-SearchBox',\n    iconContainer: 'ms-SearchBox-iconContainer',\n    icon: 'ms-SearchBox-icon',\n    clearButton: 'ms-SearchBox-clearButton',\n    field: 'ms-SearchBox-field',\n};\nexport function getStyles(props) {\n    var _a, _b, _c, _d, _e;\n    var theme = props.theme, underlined = props.underlined, disabled = props.disabled, hasFocus = props.hasFocus, className = props.className, hasInput = props.hasInput, disableAnimation = props.disableAnimation, showIcon = props.showIcon;\n    var palette = theme.palette, fonts = theme.fonts, semanticColors = theme.semanticColors, effects = theme.effects;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    // placeholder style constants\n    var placeholderStyles = {\n        color: semanticColors.inputPlaceholderText,\n        opacity: 1,\n    };\n    var inputIconAlt = palette.neutralSecondary;\n    var inputIconAltHovered = palette.neutralPrimary;\n    var inputBorderDisabled = palette.neutralLighter;\n    var inputBackgroundHovered = palette.neutralLighter;\n    var inputBackgroundDisabled = palette.neutralLighter;\n    return {\n        root: [\n            classNames.root,\n            fonts.medium,\n            normalize,\n            {\n                color: semanticColors.inputText,\n                backgroundColor: semanticColors.inputBackground,\n                display: 'flex',\n                flexDirection: 'row',\n                flexWrap: 'nowrap',\n                alignItems: 'stretch',\n                // The 1px top and bottom padding ensure the input field does not overlap the border\n                padding: '1px 0 1px 4px',\n                borderRadius: effects.roundedCorner2,\n                border: \"1px solid \" + semanticColors.inputBorder,\n                height: 32,\n                selectors: (_a = {},\n                    _a[HighContrastSelector] = {\n                        borderColor: 'WindowText',\n                    },\n                    _a[':hover'] = {\n                        borderColor: semanticColors.inputBorderHovered,\n                        selectors: (_b = {},\n                            _b[HighContrastSelector] = {\n                                borderColor: 'Highlight',\n                            },\n                            _b),\n                    },\n                    _a[\":hover .\" + classNames.iconContainer] = {\n                        color: semanticColors.inputIconHovered,\n                    },\n                    _a),\n            },\n            !hasFocus &&\n                hasInput && {\n                selectors: (_c = {},\n                    _c[\":hover .\" + classNames.iconContainer] = {\n                        width: 4,\n                    },\n                    _c[\":hover .\" + classNames.icon] = {\n                        opacity: 0,\n                        pointerEvents: 'none',\n                    },\n                    _c),\n            },\n            hasFocus && [\n                'is-active',\n                {\n                    position: 'relative',\n                },\n                getInputFocusStyle(semanticColors.inputFocusBorderAlt, underlined ? 0 : effects.roundedCorner2, underlined ? 'borderBottom' : 'border'),\n            ],\n            showIcon && [\n                {\n                    selectors: (_d = {},\n                        _d[\":hover .\" + classNames.iconContainer] = {\n                            width: 32,\n                        },\n                        _d[\":hover .\" + classNames.icon] = {\n                            opacity: 1,\n                        },\n                        _d),\n                },\n            ],\n            disabled && [\n                'is-disabled',\n                {\n                    borderColor: inputBorderDisabled,\n                    backgroundColor: inputBackgroundDisabled,\n                    pointerEvents: 'none',\n                    cursor: 'default',\n                    selectors: (_e = {},\n                        _e[HighContrastSelector] = {\n                            borderColor: 'GrayText',\n                        },\n                        _e),\n                },\n            ],\n            underlined && [\n                'is-underlined',\n                {\n                    borderWidth: '0 0 1px 0',\n                    borderRadius: 0,\n                    // Underlined SearchBox has a larger padding left to vertically align with the waffle in product\n                    padding: '1px 0 1px 8px',\n                },\n            ],\n            underlined &&\n                disabled && {\n                backgroundColor: 'transparent',\n            },\n            hasInput && 'can-clear',\n            className,\n        ],\n        iconContainer: [\n            classNames.iconContainer,\n            {\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                flexShrink: 0,\n                fontSize: 16,\n                width: 32,\n                textAlign: 'center',\n                color: semanticColors.inputIcon,\n                cursor: 'text',\n            },\n            hasFocus && {\n                width: 4,\n            },\n            disabled && {\n                color: semanticColors.inputIconDisabled,\n            },\n            !disableAnimation && {\n                transition: \"width \" + AnimationVariables.durationValue1,\n            },\n            showIcon &&\n                hasFocus && {\n                width: 32,\n            },\n        ],\n        icon: [\n            classNames.icon,\n            {\n                opacity: 1,\n            },\n            hasFocus && {\n                opacity: 0,\n                pointerEvents: 'none',\n            },\n            !disableAnimation && {\n                transition: \"opacity \" + AnimationVariables.durationValue1 + \" 0s\",\n            },\n            showIcon &&\n                hasFocus && {\n                opacity: 1,\n            },\n        ],\n        clearButton: [\n            classNames.clearButton,\n            {\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'stretch',\n                cursor: 'pointer',\n                flexBasis: '32px',\n                flexShrink: 0,\n                padding: 0,\n                margin: '-1px 0px',\n                selectors: {\n                    '&:hover .ms-Button': {\n                        backgroundColor: inputBackgroundHovered,\n                    },\n                    '&:hover .ms-Button-icon': {\n                        color: inputIconAltHovered,\n                    },\n                    '.ms-Button': {\n                        borderRadius: getRTL(theme) ? '1px 0 0 1px' : '0 1px 1px 0',\n                    },\n                    '.ms-Button-icon': {\n                        color: inputIconAlt,\n                    },\n                },\n            },\n        ],\n        field: [\n            classNames.field,\n            normalize,\n            getPlaceholderStyles(placeholderStyles),\n            {\n                backgroundColor: 'transparent',\n                border: 'none',\n                outline: 'none',\n                fontWeight: 'inherit',\n                fontFamily: 'inherit',\n                fontSize: 'inherit',\n                color: semanticColors.inputText,\n                flex: '1 1 0px',\n                // The default implicit value of 'auto' prevents the input from shrinking. Setting min-width to\n                // 0px allows the input element to shrink to fit the container.\n                minWidth: '0px',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                // This padding forces the text placement to round up.\n                paddingBottom: 0.5,\n                // This removes the IE specific clear button in the input since we implemented our own\n                selectors: {\n                    '::-ms-clear': {\n                        display: 'none',\n                    },\n                },\n            },\n            disabled && {\n                color: semanticColors.disabledText,\n            },\n        ],\n    };\n}\n//# sourceMappingURL=SearchBox.styles.js.map","import { styled } from '../../Utilities';\nimport { SearchBoxBase } from './SearchBox.base';\nimport { getStyles } from './SearchBox.styles';\nexport var SearchBox = styled(SearchBoxBase, getStyles, undefined, { scope: 'SearchBox' });\n//# sourceMappingURL=SearchBox.js.map","import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { getWindow } from './dom/getWindow';\n/**\n * Utility component for delaying the render of a child component after a given delay. This component\n * requires a single child component; don't pass in many components. Wrap multiple components in a DIV\n * if necessary.\n *\n * @public\n * {@docCategory DelayedRender}\n */\nvar DelayedRender = /** @class */ (function (_super) {\n    __extends(DelayedRender, _super);\n    function DelayedRender(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            isRendered: getWindow() === undefined,\n        };\n        return _this;\n    }\n    DelayedRender.prototype.componentDidMount = function () {\n        var _this = this;\n        var delay = this.props.delay;\n        this._timeoutId = window.setTimeout(function () {\n            _this.setState({\n                isRendered: true,\n            });\n        }, delay);\n    };\n    DelayedRender.prototype.componentWillUnmount = function () {\n        if (this._timeoutId) {\n            clearTimeout(this._timeoutId);\n        }\n    };\n    DelayedRender.prototype.render = function () {\n        return this.state.isRendered ? React.Children.only(this.props.children) : null;\n    };\n    DelayedRender.defaultProps = {\n        delay: 0,\n    };\n    return DelayedRender;\n}(React.Component));\nexport { DelayedRender };\n//# sourceMappingURL=DelayedRender.js.map","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/shell\",\n      function () {\n        return require(\"private-next-pages/shell.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/shell\"])\n      });\n    }\n  ","import { IconButton, MessageBar, SearchBox, Stack, StackItem } from '@fluentui/react';\nimport { reaction } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport 'xterm/css/xterm.css';\nimport { ResizeObserver } from '../components';\nimport { globalState } from \"../state\";\nimport { Icons, RouteStackProps } from '../utils';\n\nlet terminal: import('../components/terminal').AdbTerminal;\nif (typeof window !== 'undefined') {\n    const { AdbTerminal } = await import('../components/terminal');\n    terminal = new AdbTerminal();\n}\n\nconst UpIconProps = { iconName: Icons.ChevronUp };\nconst DownIconProps = { iconName: Icons.ChevronDown };\n\nconst Shell: NextPage = (): JSX.Element | null => {\n    const [searchKeyword, setSearchKeyword] = useState('');\n    const handleSearchKeywordChange = useCallback((e, newValue?: string) => {\n        setSearchKeyword(newValue ?? '');\n        if (newValue) {\n            terminal.searchAddon.findNext(newValue, { incremental: true });\n        }\n    }, []);\n    const findPrevious = useCallback(() => {\n        terminal.searchAddon.findPrevious(searchKeyword);\n    }, [searchKeyword]);\n    const findNext = useCallback(() => {\n        terminal.searchAddon.findNext(searchKeyword);\n    }, [searchKeyword]);\n\n    const connectingRef = useRef(false);\n    useEffect(() => {\n        return reaction(\n            () => globalState.device,\n            async () => {\n                if (!globalState.device) {\n                    terminal.socket = undefined;\n                    return;\n                }\n\n                if (!!terminal.socket || connectingRef.current) {\n                    return;\n                }\n\n                try {\n                    connectingRef.current = true;\n                    const socket = await globalState.device.subprocess.shell();\n                    terminal.socket = socket;\n                } catch (e: any) {\n                    globalState.showErrorDialog(e);\n                } finally {\n                    connectingRef.current = false;\n                }\n            },\n            {\n                fireImmediately: true,\n            }\n        );\n    }, []);\n\n    const handleResize = useCallback(() => {\n        terminal.fit();\n    }, []);\n\n    const handleContainerRef = useCallback((container: HTMLDivElement | null) => {\n        if (container) {\n            terminal.setContainer(container);\n        }\n    }, []);\n\n    return (\n        <Stack {...RouteStackProps}>\n            <Head>\n                <title>Shell - Android ウェブツール</title>\n            </Head>\n\n            <MessageBar>\n                <code>settings put system system_locales ja-JP</code>\n                <span> を実行して再起動すると言語が日本語になります。</span>\n                <span>MIUI 搭載デバイスでは開発者向けオプションで「USB デバッグ (セキュリティ)・USB debugging (Security)」を、ColorOS 搭載デバイスでは「認可の監視を無効化・Disable permission monitoring」をオンにしてください。</span>\n            </MessageBar>\n\n            <StackItem>\n                <Stack horizontal>\n                    <StackItem grow>\n                        <SearchBox\n                            placeholder=\"探す\"\n                            value={searchKeyword}\n                            onChange={handleSearchKeywordChange}\n                            onSearch={findNext}\n                        />\n                    </StackItem>\n                    <StackItem>\n                        <IconButton\n                            disabled={!searchKeyword}\n                            iconProps={UpIconProps}\n                            onClick={findPrevious}\n                        />\n                    </StackItem>\n                    <StackItem>\n                        <IconButton\n                            disabled={!searchKeyword}\n                            iconProps={DownIconProps}\n                            onClick={findNext}\n                        />\n                    </StackItem>\n                </Stack>\n            </StackItem>\n\n            <StackItem grow styles={{ root: { position: 'relative', minHeight: 0 } }}>\n                <ResizeObserver onResize={handleResize} />\n                <div ref={handleContainerRef} style={{ height: '100%' }} />\n            </StackItem>\n        </Stack>\n    );\n};\n\nexport default observer(Shell);\n"],"names":["_a","ICON_MAP","getClassNames","classNamesFunction","getAnnouncementPriority","messageBarType","getRole","MessageBarBase","props","ref","useBoolean","expandSingleLine","toggleExpandSingleLine","toggle","labelId","useId","actions","className","children","overflowButtonAriaLabel","dismissIconProps","styles","theme","_b","_c","onDismiss","undefined","_d","isMultiline","truncated","dismissButtonAriaLabel","messageBarIconProps","role","_e","delayedRender","expandButtonProps","nativeProps","classNames","expandIconProps","iconName","regionProps","actionsDiv","dismissButton","IconButton","disabled","dismissal","onClick","iconProps","title","ariaLabel","root","content","iconContainer","Icon","css","icon","text","id","innerText","DelayedRender","expand","dismissSingleLine","displayName","GlobalClassNames","error","blocked","severeWarning","success","warning","multiline","singleline","dismissalSingleLine","expandingSingleLine","actionsSingleline","backgroundColor","highContrastBackgroundColor","iconColor","MessageBar","styled","_f","semanticColors","fonts","SmallScreenSelector","dismissalAndExpandIconStyle","fontSize","height","lineHeight","color","messageText","selectors","dismissalAndExpandStyle","inset","highContrastStyle","outlineOffset","outline","borderColor","flexShrink","width","padding","medium","background","minHeight","display","wordBreak","messageLink","messageLinkHovered","border","flexDirection","minWidth","margin","flexGrow","small","marginRight","paddingLeft","overflow","whiteSpace","textOverflow","flexBasis","alignItems","marginLeft","marginBottom","scope","MessageBarType","COMPONENT_NAME","iconButtonStyles","iconButtonProps","defaultClearButtonProps","SearchBoxBase","forwardedRef","defaultValue","underlined","labelText","placeholder","clearButtonProps","disableAnimation","showIcon","customOnClear","onClear","customOnBlur","onBlur","customOnEscape","onEscape","customOnSearch","onSearch","customOnKeyDown","onKeyDown","onChange","onChanged","hasFocus","setHasFocus","prevChangeTimestamp","_g","useControllableValue","value","ev","newValue","timeStamp","current","uncastValue","setValue","String","rootElementRef","inputElementRef","mergedRootRef","useMergedRefs","customOnClearClick","hasInput","length","defaultPrevented","focus","stopPropagation","preventDefault","onClearClick","onInputChange","target","componentRef","useComponentRef","onFocusCapture","onFocus","call","selectionStart","selectionEnd","field","onInput","which","KeyCodes","clearButton","SearchBox","palette","effects","placeholderStyles","inputPlaceholderText","opacity","inputIconAlt","neutralSecondary","inputIconAltHovered","neutralPrimary","inputBorderDisabled","neutralLighter","inputBackgroundHovered","inputBackgroundDisabled","inputText","inputBackground","flexWrap","borderRadius","roundedCorner2","inputBorder","inputBorderHovered","inputIconHovered","pointerEvents","position","inputFocusBorderAlt","cursor","borderWidth","justifyContent","textAlign","inputIcon","inputIconDisabled","transition","fontWeight","fontFamily","flex","paddingBottom","disabledText","_super","_this","this","state","isRendered","prototype","componentDidMount","delay","_timeoutId","window","setTimeout","setState","componentWillUnmount","clearTimeout","render","defaultProps","__NEXT_P","push","terminal","AdbTerminal","UpIconProps","Icons","DownIconProps","observer","useState","searchKeyword","setSearchKeyword","handleSearchKeywordChange","useCallback","e","searchAddon","findNext","incremental","findPrevious","connectingRef","useRef","useEffect","reaction","globalState","socket","fireImmediately","handleResize","fit","handleContainerRef","container","setContainer","Stack","RouteStackProps","Head","code","span","StackItem","horizontal","grow","ResizeObserver","onResize","div","style"],"sourceRoot":""}